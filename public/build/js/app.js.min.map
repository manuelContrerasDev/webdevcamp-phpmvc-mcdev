{"version":3,"sources":["app.js","mapa.js","horas.js","ponentes.js","regalos.js","registro.js","slider.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","id","horaSeleccionada","onclick","lat","lng","zoom","L","setView","tileLayer","attribution","addTo","marker","bindPopup","openPopup","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","ctx","getElementById","getContext","Chart","type","data","labels","regalo","datasets","label","total","backgroundColor","options","scales","y","beginAtZero","plugins","legend","display","obtenerDatos","Swal","resumen","boton","seleccionarEvento","disabled","titulo","parentElement","mostrarEventos","fire","title","text","icon","confirmButtonText","limpiarEventos","eventoDOM","botonEliminar","innerHTML","eliminarEvento","noRegistro","preventDefault","regaloId","eventosId","datos","FormData","append","method","body","console","log","then","location","href","token","reload","Swiper","Navigation","opciones","slidesPerView","spaceBetween","freeMode","navigation","nextEl","prevEl","breakpoints","768","1024","1200","use","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode"],"mappings":"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","file":"app.js","sourcesContent":["import './horas.js';\nimport './ponentes.js';\nimport './tags.js'\nimport './slider.js';\nimport './mapa.js';\nimport './registro.js';\nimport './regalos.js';","if(document.querySelector('#mapa')) {\n\n    const lat = 34.0403207\n    const lng = -118.2695624\n    const zoom = 16\n\n    const map = L.map('mapa').setView([lat, lng], zoom);\n\n    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n\n    L.marker([lat, lng]).addTo(map)\n        .bindPopup(`\n            <h2 class=\"mapa__heading\">DevWebCamp</h2>\n            <p class=\"mapa__texto\">Centro de Convenciones de Los √Ångeles</p>\n        `)\n        .openPopup();\n}","(function(){\n    const horas = document.querySelector('#horas')\n\n    if(horas) {\n        const categoria = document.querySelector('[name=\"categoria_id\"]')\n        const dias = document.querySelectorAll('[name=\"dia\"]');\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\n\n        categoria.addEventListener('change', terminoBusqueda)\n        dias.forEach( dia => dia.addEventListener('change', terminoBusqueda))\n\n\n        let busqueda = {\n            categoria_id: +categoria.value || '',\n            dia: +inputHiddenDia.value || ''\n        }\n\n                \n        if(!Object.values(busqueda).includes('')) {\n            (async () => {\n                await buscarEventos();\n\n                const id = inputHiddenHora.value;\n\n                // Resaltar la hora actual\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`)\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada')\n                horaSeleccionada.classList.add('horas__hora--seleccionada')\n\n                horaSeleccionada.onclick = seleccionarHora;\n            })()\n        }\n\n        function terminoBusqueda(e) {\n            busqueda[e.target.name] = e.target.value;\n\n            // Reiniciar los campos ocultos y el selector de horas\n            inputHiddenHora.value = '';\n            inputHiddenDia.value = '';\n            \n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\n            if(horaPrevia) {\n                horaPrevia.classList.remove('horas__hora--seleccionada')\n            }\n\n            if(Object.values(busqueda).includes('')) {\n                return\n            }\n\n            buscarEventos();\n        }\n\n        async function buscarEventos() {\n            const { dia, categoria_id } = busqueda\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\n\n            const resultado = await fetch(url);\n            const eventos = await resultado.json();\n            obtenerHorasDisponibles(eventos);\n        }\n\n        function obtenerHorasDisponibles(eventos) {\n            // Reiniciar las horas\n            const listadoHoras = document.querySelectorAll('#horas li');\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'))\n\n            // Comprobar eventos ya tomados, y quitar la variable de deshabilitado\n            const horasTomadas = eventos.map( evento => evento.hora_id);            \n            const listadoHorasArray = Array.from(listadoHoras);\n\n            const resultado = listadoHorasArray.filter( li =>  !horasTomadas.includes(li.dataset.horaId) );\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada'))\n\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\n        }\n\n        function seleccionarHora(e) {\n            // Deshabilitar la hora previa, si hay un nuevo click\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\n            if(horaPrevia) {\n                horaPrevia.classList.remove('horas__hora--seleccionada')\n            }\n\n            // Agregar clase de seleccionado\n            e.target.classList.add('horas__hora--seleccionada')\n\n            inputHiddenHora.value = e.target.dataset.horaId\n\n            // Llenar el campo oculto de dia\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\n        }\n    }\n    \n})();","(function()¬†{\n    const ponentesInput = document.querySelector('#ponentes');\n\n    if(ponentesInput) {\n        let ponentes = [];\n        let ponentesFiltrados = [];\n\n        const listadoPonentes = document.querySelector('#listado-ponentes')\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]')\n\n        obtenerPonentes();\n        ponentesInput.addEventListener('input', buscarPonentes)\n\n        if(ponenteHidden.value) {\n           (async() => {\n                const ponente = await obtenerPonente(ponenteHidden.value)\n                const {¬†nombre, apellido} = ponente\n\n                // Insertar en el HTML\n                const ponenteDOM = document.createElement('LI');\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\n                ponenteDOM.textContent = `${nombre} ${apellido}`\n\n                listadoPonentes.appendChild(ponenteDOM)\n           })()\n        }\n\n        async function obtenerPonentes() {\n            const url = `/api/ponentes`;\n            const respuesta = await fetch(url);\n            const resultado = await respuesta.json();\n            formatearPonentes(resultado)\n        }\n\n        async function obtenerPonente(id) {\n            const url = `/api/ponente?id=${id}`;\n            const respuesta = await fetch(url)\n            const resultado = await respuesta.json()\n            return resultado;\n        }\n\n        function formatearPonentes(arrayPonentes = []) {\n            ponentes = arrayPonentes.map( ponente => {\n                return {\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\n                    id: ponente.id\n                } \n            })\n        }\n\n        function buscarPonentes(e) {\n            const busqueda = e.target.value;\n\n            if(busqueda.length > 3) {\n                const expresion = new RegExp(busqueda, \"i\");\n                ponentesFiltrados = ponentes.filter(ponente => {\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1) {\n                        return ponente\n                    }\n                })\n            } else {\n                ponentesFiltrados = []\n            }\n\n            mostrarPonentes();\n        }\n\n        function mostrarPonentes() {\n\n            while(listadoPonentes.firstChild) {\n                listadoPonentes.removeChild(listadoPonentes.firstChild)\n            }\n\n            if(ponentesFiltrados.length > 0) {\n                ponentesFiltrados.forEach(ponente => {\n                    const ponenteHTML = document.createElement('LI');\n                    ponenteHTML.classList.add('listado-ponentes__ponente')\n                    ponenteHTML.textContent = ponente.nombre;\n                    ponenteHTML.dataset.ponenteId = ponente.id\n                    ponenteHTML.onclick = seleccionarPonente\n\n                    // A√±adir al dom\n                    listadoPonentes.appendChild(ponenteHTML)\n                })\n            } else {\n                const noResultados = document.createElement('P')\n                noResultados.classList.add('listado-ponentes__no-resultado')\n                noResultados.textContent = 'No hay resultados para tu b√∫squeda'\n                listadoPonentes.appendChild(noResultados)              \n            }\n        }\n\n        function seleccionarPonente(e) {\n            const ponente = e.target;\n\n            // Remover la clase previa\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado')\n            if(ponentePrevio) {\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado')\n            }\n            ponente.classList.add('listado-ponentes__ponente--seleccionado')\n\n            ponenteHidden.value = ponente.dataset.ponenteId\n        }\n    }\n})();","(function() {\n    const grafica = document.querySelector('#regalos-grafica');\n    if(grafica) {\n            obtenerDatos()\n            async function obtenerDatos() {\n                const url = '/api/regalos'\n                const respuesta = await fetch(url)\n                const resultado = await respuesta.json()\n\n                const ctx = document.getElementById('regalos-grafica').getContext('2d');\n                const myChart = new Chart(ctx, {\n                    type: 'bar',\n                    data: {\n                        labels: resultado.map( regalo => regalo.nombre),\n                        datasets: [{\n                            label: '',\n                            data: resultado.map( regalo => regalo.total),\n                            backgroundColor: [\n                                '#ea580c',\n                                '#84cc16',\n                                '#22d3ee',\n                                '#a855f7',\n                                '#ef4444',\n                                '#14b8a6',\n                                '#db2777',\n                                '#e11d48',\n                                '#7e22ce'\n                            ]\n                        }]\n                    },\n                    options: {\n                        scales: {\n                            y: {\n                                beginAtZero: true\n                            }\n                        },\n                        plugins: {\n                            legend: {\n                                display: false\n                            }\n                        }\n                    }\n                });\n            }\n\n            \n    }\n    \n})();","import Swal from 'sweetalert2'\n\n(function(){\n    let eventos = [];\n\n    const resumen = document.querySelector('#registro-resumen')\n    if(resumen) {\n            \n        const eventosBoton = document.querySelectorAll('.evento__agregar');\n        eventosBoton.forEach(boton => boton.addEventListener('click', seleccionarEvento))\n\n        const formularioRegistro = document.querySelector('#registro');\n        formularioRegistro.addEventListener('submit', submitFormulario)\n\n        mostrarEventos();\n\n        function seleccionarEvento({target}) {\n\n            if(eventos.length < 5) {\n                // Deshabilitar el evento\n                target.disabled = true\n                eventos = [...eventos, {\n                    id: target.dataset.id,\n                    titulo: target.parentElement.querySelector('.evento__nombre').textContent.trim()\n                }]\n\n                mostrarEventos();\n            } else {\n                Swal.fire({\n                    title: 'Error',\n                    text: 'M√°ximo 5 eventos por registro',\n                    icon: 'error',\n                    confirmButtonText: 'OK'\n                })\n            }\n        }\n\n        function mostrarEventos() {\n            // LIMPIAR EL HTML\n            limpiarEventos();\n\n            if(eventos.length > 0 ) {\n                eventos.forEach( evento => {\n                    const eventoDOM = document.createElement('DIV')\n                    eventoDOM.classList.add('registro__evento')\n\n                    const titulo = document.createElement('H3')\n                    titulo.classList.add('registro__nombre')\n                    titulo.textContent = evento.titulo\n\n                    const botonEliminar = document.createElement('BUTTON')\n                    botonEliminar.classList.add('registro__eliminar')\n                    botonEliminar.innerHTML = `<i class=\"fa-solid fa-trash\"></i>`\n                    botonEliminar.onclick = function() {\n                        eliminarEvento(evento.id)\n                    }\n\n\n                    // renderizar en el html\n                    eventoDOM.appendChild(titulo)\n                    eventoDOM.appendChild(botonEliminar)\n                    resumen.appendChild(eventoDOM)\n                })\n            } else {\n                const noRegistro = document.createElement('P')\n                noRegistro.textContent = 'No hay eventos, a√±ade hasta 5 del lado izquierdo'\n                noRegistro.classList.add('registro__texto')\n                resumen.appendChild(noRegistro)\n            }\n        }\n\n        function eliminarEvento(id) {\n            eventos = eventos.filter( evento => evento.id !== id)\n            const botonAgregar = document.querySelector(`[data-id=\"${id}\"]`)\n            botonAgregar.disabled = false\n            mostrarEventos();\n        }\n\n        function limpiarEventos() {\n            while(resumen.firstChild) {\n                resumen.removeChild(resumen.firstChild);\n            }\n        }\n\n        async function submitFormulario(e) {\n            e.preventDefault();\n\n            // Obtener el regalo\n            const regaloId = document.querySelector('#regalo').value\n            const eventosId = eventos.map(evento => evento.id)\n\n            if(eventosId.length === 0 || regaloId === '') {\n                 Swal.fire({\n                    title: 'Error',\n                    text: 'Elige al menos un Evento y un Regalo',\n                    icon: 'error',\n                    confirmButtonText: 'OK'\n                })\n                return;\n            }\n\n            // Objeto de formdata\n            const datos = new FormData();\n            datos.append('eventos', eventosId)\n            datos.append('regalo_id', regaloId)\n\n            const url = '/finalizar-registro/conferencias'\n            const respuesta = await fetch(url, {\n                method: 'POST',\n                body: datos\n            })\n            const resultado = await respuesta.json();\n\n            console.log(resultado)\n\n            if(resultado.resultado) {\n                Swal.fire(\n                    'Registro Exitoso',\n                    'Tu registro fue exitoso, te esperamos en DevWebCamp',\n                    'success'\n                ).then( () => location.href = `/boleto?id=${resultado.token}`) \n            } else {\n                Swal.fire({\n                    title: 'Error',\n                    text: 'Hubo un error',\n                    icon: 'error',\n                    confirmButtonText: 'OK'\n                }).then( () => location.reload() )\n            }\n\n        }\n\n    }\n})();","import Swiper, { Navigation } from 'swiper';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    if(document.querySelector('.slider')) {\n        const opciones = {\n            slidesPerView: 1,\n            spaceBetween: 15,\n            freeMode: true,\n            navigation: {\n                nextEl: '.swiper-button-next',\n                prevEl: '.swiper-button-prev'\n            },\n            breakpoints: {\n                768: {\n                    slidesPerView: 2\n                },\n                1024: {\n                    slidesPerView: 3\n                },\n                1200: {\n                    slidesPerView: 4\n                }\n            }\n        }\n\n        Swiper.use([Navigation])\n        new Swiper('.slider', opciones)\n    }\n});","(function() {\n\n    const tagsInput = document.querySelector('#tags_input')\n\n    if(tagsInput) {\n\n        const tagsDiv = document.querySelector('#tags');\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\n\n        let tags = [];\n\n        // Recuperar del input oculto\n        if(tagsInputHidden.value !== '') {\n            tags = tagsInputHidden.value.split(',');\n            mostrarTags();\n        }\n \n        // Escuchar los cambios en el input\n        tagsInput.addEventListener('keypress', guardarTag)\n\n        function guardarTag(e) {\n            if(e.keyCode === 44) {\n                if(e.target.value.trim() === '' || e.target.value < 1) { \n                    return\n                }\n                e.preventDefault();\n                tags = [...tags, e.target.value.trim()];\n                tagsInput.value = '';\n                mostrarTags();\n            }\n        }\n\n        function mostrarTags() {\n            tagsDiv.textContent = '';\n            tags.forEach(tag => {\n                const etiqueta = document.createElement('LI');\n                etiqueta.classList.add('formulario__tag')\n                etiqueta.textContent = tag;\n                etiqueta.ondblclick = eliminarTag\n                tagsDiv.appendChild(etiqueta)\n            })\n            actualizarInputHidden();\n        }   \n\n        function eliminarTag(e) {\n            e.target.remove()\n            tags = tags.filter(tag => tag !== e.target.textContent)\n            actualizarInputHidden();\n        }\n\n        function actualizarInputHidden() {\n           tagsInputHidden.value = tags.toString();\n        }\n    }\n\n})();"]}